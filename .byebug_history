exit
config
exit
Monee::Currency.new(code: 'USD')
currency
expect(currency.send(:valid_currency?)).to be_truthy
continue
Monee::Money.new(-9, 'USD')
continue
conitnue
(fifty_eur  + 2).inspect
expect(fifty_eur + 2).to eq('52.00 EUR')
fifty_eur  + 2
continue
fifty_eur * 2
fifty_eur - 2
fifty_eur + 2
fifty_eur / 2
continue
fifty_eur / 2
fifty_eur + 2
fifty_eur + 4
continue
fifty_eur + 4
fifty_eur / 2
fifty_eur
fifty_eur - 2
fifty_eur + 2
fifty_eur
continue
Monee::Currency.config
continue
Monee::Config.instance
Monee::Currency.configuration
Monee::Currency.config
Monee::Currency.new(code: 'USD')
continue
Monee::Currency.new(code: 'USD')
Monee::Currency.new(code: '')
Monee::Currency.config
continue
Monee::Config.instance.base_currency.nil?
Monee::Config.instance.base_currency
Monee::Config.instance.base_currency.present?
Monee::Config.instance.instance_variable_defined?(:base_currency)
Monee::Config.instance.instance_variable_defined?(base_currency)
a.empty?
a.present?
a 
Monee::Config.instance.currency_rates
Monee::Config.instance.base_currency
Monee::Config.instance.null_object?
Monee::Config.instance.instance_eval
Monee::Config.instance.instance_variables
Monee::Config.instance.singleton_method
Monee::Config.instance.methods
Monee::Config.instance
continue
money.klass
continue
a.config
a = Monee::Currency.new(code: 'INR')
Monee::Currency.new(code: 'Bitcoin')
Monee::Currency.new(code: 'INR')
currency
continue
currency.config.base_currency
currency.config
continue
twenty_dollars < fifty_eur
twenty_dollars > Monee::Money.new(5, 'USD')
fifty_eur_in_usd == fifty_eur
fifty_eur_in_usd = fifty_eur.convert_to('USD')
twenty_dollars == Monee::Money.new(30, 'USD')
twenty_dollars == Monee::Money.new(20, 'USD')
twenty_dollars * 3
fifty_eur / 2
fifty_eur - twenty_dollars
fifty_eur + twenty_dollars
twenty_dollars = Monee::Money.new(20, 'USD')
fifty_eur.convert_to('USD')
fifty_eur.inspect
fifty_eur.currency
fifty_eur.amount
fifty_eur = Monee::Money.new(50, 'EUR')
fifty_eur = Money.new(50, 'EUR')
a.convert_to('Bitcoins')
a.convert_to('Bitcoin')
a.convert_to('EUR')
a = Monee::Money.new(50, 'USD')
continue
a.convert_to('EUR')
a.convert_to('USD')
a
a == c
a = Monee::Money.new(50, 'USD')
a == c
a = Monee::Money.new(50, 'EUR')
c = Monee::Money.new(50, 'EUR')
continue
a == c
c = Monee::Money.new(50, 'EUR')
a == c
c = Monee::Money.new(20, 'USD')
a = Monee::Money.new(50, 'EUR')
continue
a == c
c = Monee::Money.new(20, 'USD')
a = Monee::Money.new(50, 'EUR')
a
continue
a
a * 2
2 * a
a + c
c = Monee::Money.new(20, 'USD')
a / 2
a * 2
a = Monee::Money.new(50, 'EUR')
continue
a
a * 2
a - 2
a + 2
a / 2
a
a / 2
a / c
a - c
a + c
c = Monee::Money.new(20, 'USD')
a = Monee::Money.new(50, 'EUR')
continue
a - c
a + c
c = Monee::Money.new(20, 'USD')
a = Monee::Money.new(50, 'EUR')
a + c
c = Monee::Money.new(10, 'USD')
a = Monee::Money.new(10, 'EUR')
a = Monee::Money.new(10, 'USD')
a = Monee::Money.new(10, 'EUR')
b = Monee::Money.new(10, 'USD')
a = Monee::Money.new(10, 'EUR')
continue
(a + 9.78)
(a + 9)
(a + 9).amount
a = Monee::Money.new(10, 'EUR')
continue
a.inspect
a
(a + 9).amount
a + 9
a = Monee::Money.new(10, 'EUR')
continue
a + 9
a = Monee::Money.new(10, 'EUR')
continue
a + 9
a = Monee::Money.new(10, 'EUR')
continue
continye
a + 9
a = Monee::Money.new(10, 'EUR')
continue
a + 9
a = Monee::Money.new(10, 'EUR')
Monee::Money.new(10, 'EUR')
continue
''.empty?
''.blank?
''.present?
Monee::Money.new(10, 'EUR')
continue
Monee::Money.new(10, 'EUR')
Monee::Config.exists?('USD')
continue
Monee::Config.exists?('USD')
Monee::Config.instance
Monee::Money.new(10, 'EUR')
Monee::Money.new(10, 'USD')
continue
Monee::Money.new(10, 'USD')
m = Monee::Money.new(10, 'USD')
Monee::Money.conversion_rates('EUR', {'USD' => 1.11, 'Bitcoin' => 0.0047 })
  'Bitcoin' => 0.0047
  'USD'     => 1.11,
Monee::Money.conversion_rates('EUR', {
x
e
etx
Monee::Currency.new(code: 'EUR')
currency.rate
currency.code
continue
Monee::Config.instance
Monee::Config.new
continue
Monee::Currency.new(code: 'EUR')
currency.rate
currency
continue
currency
continue
currency
continue
currency
continue
currency.rate
currency.config.fetch_rate('EUR')
currency.config.fetch_rate('USD')
currency.rate
currency.code
currency.config
currency
continue
config.available_currencies['USD']
config.currency_rates
config.available_currencies
config.fetch_rate('USD')
config
currency.rate
currency
continue
currency
continue
Monee::Currency.new(code: 'USD')
Monee::Currency
Currency
currency
continue
config.base_currencyd
config.base_currency
config.currency_rates
config
